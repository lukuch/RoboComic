name: Quick Test

on:
  push:
    branches: [ main, develop, deploy-test ]
  pull_request:
    branches: [ main ]

jobs:
  quick-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: backend/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('backend/pyproject.toml') }}

    - name: Install dependencies
      run: poetry install --only main,dev

    - name: Run tests
      env:
        OPENAI_API_KEY: dummy
        ELEVENLABS_API_KEY: dummy
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        poetry run pytest tests/ -v

    - name: Test Docker build
      run: docker build -t robocomic-backend:test .

  quick-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Type check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build 